- hosts: all
  become: yes
  tasks:
    - name: clean up iptable rules
      shell: iptables -F

    - name: Use huaweicloud repo
      shell: wget -O /etc/apt/sources.list https://repo.huaweicloud.com/repository/conf/Ubuntu-Ports-xenial.list && apt update

    - name: Install Pre requirements
      shell: apt install -y openssl libssl-dev

    - name: Update resolv.conf
      shell: sed -i 's/nameserver 127.0.0.1/nameserver 8.8.8.8/' /etc/resolv.conf

- hosts: all
  become: yes
  roles:
    - role: install-openjdk
      java_version: '8'
      with_scala: true
      scala_version: '2.11.0'
    - role: install-maven
      maven_version: '3.2.5'
  tasks:
    - name: Install docker
      shell: apt install -y docker.io docker-compose containerd

# NOTE: Some tests should not be ran under root.
- hosts: all
  become: no
  tasks:
    # Todo(wxy): Frocksdb doesn't have ARM release. Build and install it locally currently.
    - name: Build and install frocksdb
      shell:
        cmd: |
          env
          git clone https://github.com/dataArtisans/frocksdb.git
          cd frocksdb
          git checkout origin/FRocksDB-5.17.2
          sudo apt update
          sudo apt install -y gcc g++ make
          export DEBUG_LEVEL=0
          make -j8 rocksdbjavastatic

          mvn install:install-file -DgroupId=com.data-artisans \
          -DartifactId=frocksdbjni -Dversion=5.17.2-artisans-2.0 \
          -Dpackaging=jar -Dfile=java/target/rocksdbjni-5.17.2-linux64.jar
      args:
        executable: /bin/bash
        chdir: '/home/zuul'
      environment: '{{ global_env }}'

    - name: Build Flink core
      shell:
        cmd: |
          set -xe
          mvn clean install --no-snapshot-updates \
          -Dflink.forkCount=2 -Dflink.forkCountTestPackage=2 -Dfast -B -Pskip-webui-build -DskipTests -Dhadoop.version=2.8.3 \
          -Dinclude_hadoop_aws -Dscala-2.11 -am -pl \
          flink-annotations,flink-test-utils-parent/flink-test-utils,flink-state-backends/flink-statebackend-rocksdb,flink-clients,\
          flink-core,flink-java,flink-optimizer,flink-runtime,flink-runtime-web,flink-scala,flink-streaming-java,\
          flink-streaming-scala,flink-metrics,flink-metrics/flink-metrics-core,flink-scala-shell
      args:
        executable: /bin/bash
        chdir: '{{ zuul.project.src_dir }}'
      environment: '{{ global_env }}'

    - name: Test Flink core
      shell:
        cmd: |
          set -xe
          mvn verify --no-snapshot-updates \
          -Dflink.forkCount=2 -Dflink.forkCountTestPackage=2 -Dfast -B -Pskip-webui-build -Dflink.tests.with-openssl \
          -Dhadoop.version=2.8.3 -Dinclude_hadoop_aws -Dscala-2.11 -fn -pl \
          flink-annotations,flink-test-utils-parent/flink-test-utils,flink-state-backends/flink-statebackend-rocksdb,\
          flink-clients,flink-core,flink-java,flink-optimizer,flink-runtime,flink-runtime-web,flink-scala,\
          flink-streaming-java,flink-streaming-scala,flink-metrics,flink-metrics/flink-metrics-core,flink-scala-shell
      args:
        executable: /bin/bash
        chdir: '{{ zuul.project.src_dir }}'
      environment: '{{ global_env }}'

    - name: Build Flink tests
      shell:
        cmd: |
          set -xe
          mvn clean install -nsu \
          -Dflink.forkCount=2 -Dflink.forkCountTestPackage=2 -Dfast -B -Pskip-webui-build -DskipTests -Dhadoop.version=2.8.3 \
          -Dinclude_hadoop_aws -Dscala-2.11 -am -pl \
          flink-tests
      args:
        executable: /bin/bash
        chdir: '{{ zuul.project.src_dir }}'
      environment: '{{ global_env }}'

    - name: Test Flink tests
      shell:
        cmd: |
          set -xe
          mvn verify -nsu \
          -Dflink.forkCount=2 -Dflink.forkCountTestPackage=2 -Dfast -B -Pskip-webui-build -Dflink.tests.with-openssl \
          -Dhadoop.version=2.8.3 -Dinclude_hadoop_aws -Dscala-2.11 -fn -pl \
          flink-tests
      args:
        executable: /bin/bash
        chdir: '{{ zuul.project.src_dir }}'
      environment: '{{ global_env }}'
