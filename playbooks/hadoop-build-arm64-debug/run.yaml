- hosts: all
  become: yes
  roles:
    - install-openjdk
    - install-maven
  tasks:
    - name: workarounds and requirements
      shell: |
        set -ex
        apt-get update -y
        echo $PATH
        sed  -i '1i\127.0.0.1 '$(hostname)'' /etc/hosts

        # fix tests in org.apache.hadoop.yarn.server.resourcemanager.recovery.TestFSRMStateStore
        sed  -i '1i\127.0.0.1 '$(hostname).'' /etc/hosts

        apt-get install -y build-essential autoconf automake libtool cmake zlib1g-dev pkg-config libssl-dev libsasl2-dev

        # Install Docker
        type docker || curl -sSL https://get.docker.com/ | sh -

        # Install patched protoc-2.5.0
        curl -Lo /opt/protoc-2.5.0-aarch64.tar.gz https://github.com/liusheng/liusheng.github.io/files/3429342/protoc-2.5.0-aarch64.tar.gz
        mkdir -p /opt/protoc-2.5.0-aarch64 && tar zxf /opt/protoc-2.5.0-aarch64.tar.gz -C /opt/protoc-2.5.0-aarch64/
        echo /opt/protoc-2.5.0-aarch64/lib/ > /etc/ld.so.conf.d/protoc-2.5.0-aarch64.conf
        ldconfig
        export PATH=/opt/protoc-2.5.0-aarch64/bin:$PATH
        protoc --version

        # fix org.apache.hadoop.yarn.server.federation.policies.amrmproxy.TestLocalityMulticastAMRMProxyPolicy#testStressPolicy
        wget -O /opt/phantomjs-2.1.1-linux-aarch64.tar.bz2 https://github.com/liusheng/phantomjs/releases/download/2.1.1/phantomjs-2.1.1-linux-aarch64.tar.bz2
        tar jxvf /opt/phantomjs-2.1.1-linux-aarch64.tar.bz2 -C /opt/
        cp /opt/phantomjs-2.1.1-linux-aarch64/bin/phantomjs /usr/bin/
      args:
        executable: /bin/bash
        chdir: '{{ zuul.project.src_dir }}'
      environment: '{{ global_env }}'

    - name: Install hadoop and run tests
      become: no
      shell: |
        set -x

        export PATH=/opt/protoc-2.5.0-aarch64/bin:$PATH
        protoc --version

        # Install protoc-gen-grpc-java for ARM platform
        mkdir -p ~/.m2/repository/io/grpc/protoc-gen-grpc-java/1.15.1/
        pushd ~/.m2/repository/io/grpc/protoc-gen-grpc-java/1.15.1/
        wget http://home.apache.org/~aajisaka/repository/io/grpc/protoc-gen-grpc-java/1.15.1/protoc-gen-grpc-java-1.15.1-linux-aarch_64.exe
        wget http://home.apache.org/~aajisaka/repository/io/grpc/protoc-gen-grpc-java/1.15.1/protoc-gen-grpc-java-1.15.1.pom
        wget http://home.apache.org/~aajisaka/repository/io/grpc/protoc-gen-grpc-java/1.15.1/protoc-gen-grpc-java-1.15.1.pom.sha1
        popd

        # install org.openlabtesting.leveldbjni which supports aarch64
        cd '{{ ansible_user_dir }}/{{ zuul.project.src_dir }}'
        wget -O leveldbjni-all-1.8.jar https://repo1.maven.org/maven2/org/openlabtesting/leveldbjni/leveldbjni-all/1.8/leveldbjni-all-1.8.jar
        mvn install:install-file -DgroupId=org.fusesource.leveldbjni -DartifactId=leveldbjni-all -Dversion=1.8 -Dpackaging=jar -Dfile=leveldbjni-all-1.8.jar

        # Install hadoop in Maven local repo -Pdist,native
        mvn clean install -e -B -Pdist -Psrc -Dtar -DskipTests -Dmaven.javadoc.skip 2>&1 | tee "{{ ansible_user_dir }}/workspace/logs/hadoop_build.log"

        # Compile hadoop
        sudo cp -r hadoop-dist/target/hadoop-3.3.0-SNAPSHOT /opt/
        export PATH=/opt/hadoop-3.3.0-SNAPSHOT/bin:$PATH
        export JAVA_HOME=`dirname $(dirname $(update-alternatives --list javac))`
        hadoop version
        # hadoop checknative -a

        pushd hadoop-yarn-project/
        mvn test -B -e -fn | tee "{{ ansible_user_dir }}/workspace/logs/hadoop_yarn_test.log"
        popd
        sleep 7200000000000
      args:
        executable: /bin/bash
        chdir: '{{ zuul.project.src_dir }}'
      environment: '{{ global_env }}'
