- hosts: all
  become: yes
  roles:
    - install-openjdk
    - install-maven

- hosts: all
    tasks:
#    - name: 'Step1: Try to build Spark directly'
#      shell: |
#        set -xo pipefail
#        # build and test spark
#        ./build/mvn -DskipTests clean package 2>&1 | tee "{{ ansible_user_dir }}/workspace/logs/spark_build_without_fixing.log"
#
#        # run unit tests
#        ./build/mvn test -fn 2>&1 | tee "{{ ansible_user_dir }}/workspace/logs/spark_test_without_fixing.log"
#      args:
#        executable: /bin/bash
#        chdir: '{{ zuul.project.src_dir }}'
#      ignore_errors: yes
#      environment: '{{ global_env }}'

      - name: 'Step: Build and run unit tests for apache spark after fixing errors'
        shell:
          cmd: |
            set -ex
    
            # fix kafka authfail tests
            sudo sed -i "s|127.0.0.1 $(hostname) localhost|127.0.0.1 localhost $(hostname)|" /etc/hosts
    
            # install org.openlabtesting.leveldbjni which supports aarch64
            wget https://repo1.maven.org/maven2/org/openlabtesting/leveldbjni/leveldbjni-all/1.8/leveldbjni-all-1.8.jar
            mvn install:install-file -DgroupId=org.fusesource.leveldbjni -DartifactId=leveldbjni-all -Dversion=1.8 -Dpackaging=jar -Dfile=leveldbjni-all-1.8.jar
    
            ./build/mvn clean install -DskipTests -Phadoop-2.7 -Pyarn -Phive -Phive-thriftserver -Pkinesis-asl -Pmesos 2>&1 | tee "{{ ansible_user_dir }}/workspace/logs/spark_build.log"
            ./build/mvn test -Phadoop-2.7 -Pyarn -Phive -Phive-thriftserver -Pkinesis-asl -Pmesos 2>&1 | tee "{{ ansible_user_dir }}/workspace/logs/spark_test.log"
    
          chdir: '{{ zuul.project.src_dir }}'
          executable: /bin/bash
        environment: '{{ global_env }}'
